{"version":3,"sources":["components/reduser.js","components/reduserConfig.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","data","store","createStore","state","action","console","log","type","App","storage","useSelector","dispatch","useDispatch","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+NAAMA,EAAe,CACjBC,KAAM,GCEV,IAEeC,EAFDC,aDCC,WAAgD,IAA/BC,EAA8B,uDAAtBJ,EAAcK,EAAQ,uCAE1D,OADAC,QAAQC,IAAIH,GACJC,EAAOG,MACX,IAAK,YACD,OAAO,2BACAJ,GADP,IAEIH,KAAMG,EAAMH,KAAO,IAG3B,IAAK,YACD,OAAO,2BACAG,GADP,IAEIH,KAAMG,EAAMH,KAAO,IAI3B,QACI,OAAOG,M,qBEhBJ,SAASK,IACtB,IAAMC,EAAUC,aAAY,SAAAP,GAAK,OAAIA,EAAMH,QACrCW,EAAWC,cASjB,OACE,qCACE,wCAAWH,KACX,wBAAQI,QAAS,kBAAMF,EAVE,CAC3BJ,KAAM,eASJ,kBACA,wBAAQM,QAAS,kBAAMF,EARF,CACvBJ,KAAM,eAOJ,qBCpBN,IAYeO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OAEP,cAAC,IAAD,CAAUvB,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJwB,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.166aec99.chunk.js","sourcesContent":["const initialState = {\r\n    data: 0,\r\n};\r\n\r\nexport default function reduser(state = initialState, action) {\r\n    console.log(state)\r\n    switch (action.type) {\r\n        case 'increment': {\r\n            return {\r\n                ...state,\r\n                data: state.data + 1\r\n            };\r\n        }\r\n        case 'decrement': {\r\n            return {\r\n                ...state,\r\n                data: state.data - 1\r\n            };\r\n        }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore } from 'redux';\r\nimport reduser from './reduser';\r\n\r\nconst store = createStore(reduser);\r\n\r\nexport default store;","import './App.css';\nimport React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\n\n\nexport default function App() {\n  const storage = useSelector(state => state.data);\n  const dispatch = useDispatch();\n\n  const incrementData = () => ({\n    type: 'increment'\n  });\n  const decrement = () => ({\n    type: 'decrement'\n  });\n\n  return (\n    <>\n      <p>state: {storage}</p>\n      <button onClick={() => dispatch(incrementData())}>Incr</button>\n      <button onClick={() => dispatch(decrement())}>Decr</button>\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './components/reduserConfig';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}